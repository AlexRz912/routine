{
    "usermanagement": {
        "scenario": "add a user, give him a new password",
        "command_list": [
            "useradd -s /bin/bash doublecoffee",
            "passwd doublecoffee"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.8584834379945899,
        "force": 8.192000000000002,
        "creation_date": "2025-04-06",
        "success": true
    },
    "new_user_secure_password": {
        "scenario": "add a user, generate a password and and change default password for this user",
        "command_list": [
            "useradd -s /bin/bash revsh",
            "pwgen -s 16 1",
            "echo \"revsh:fqohdGcZpEY54djL\" | sudo chpasswd"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.8584834379945899,
        "force": 8.192000000000002,
        "creation_date": "2025-04-06",
        "success": true
    },
    "change_user_directory_for_apache_configuration": {
        "scenario": "activate user directory from apache module, then change user directory for each user, don't forget to update a certain config file",
        "command_list": [
            "a2enmod userdir",
            "sed -i 's|public_html|www|g' /etc/apache2/mods-available/userdir.conf",
            "sed -i 's|public_html|www|g' /etc/apache2/mods-available/userdir.c"
        ],
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.1,
        "force": 0.5242880000000002,
        "creation_date": "2025-04-06",
        "success": false
    },
    "create_dnszone": {
        "scenario": "zone dns creation with bind",
        "command_list": [
            "ZONE_NAME=\"mon-shell-est-beau.com\"",
            "ZONE_FILE=\"/etc/bind/db.mon-shell-est-beau.com\"",
            "NAMED_CONF=\"/etc/bind/named.conf.local\"",
            "rndc reload",
            "named-checkconf"
        ],
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.21742987238714603,
        "force": 0.8192000000000003,
        "creation_date": "2025-04-06",
        "success": false
    },
    "ip_print_octet": {
        "scenario": "print first octet of ip address",
        "command_list": [
            "IP=$(hostname -I | awk '{print $1}')",
            "IFS='.' read -r -a IP_ARRAY <<< \"$IP\"",
            "echo $IP_ARRAY[0]"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.29502265617444295,
        "force": 2.0480000000000005,
        "creation_date": "2025-04-06",
        "success": false
    },
    "user_var": {
        "scenario": "3 ways to check who is the user connected",
        "command_list": [
            "echo $EUID",
            "id",
            "whoami"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.736993813311011,
        "force": 4.096000000000001,
        "creation_date": "2025-04-06",
        "success": true
    },
    "apache_routine": {
        "scenario": "list modules, enable, disable modules, search for apache lib list, check if one module in particular is used",
        "command_list": [
            "apache2ctl -M",
            "a2dismod alias",
            "a2enmod headers",
            "a2enmod env",
            "a2enmod auth_basic",
            "a2enmod ssl",
            "a2dismod security2",
            "a2enmod rewrite",
            "a2enmod proxy",
            "a2enmod proxy_http",
            "systemctl restart apache2",
            "apt search apache2",
            "apt search libapache2-mod",
            "apache2ctl -M | grep ssl"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.5431598808587054,
        "force": 2.0480000000000005,
        "creation_date": "2025-04-06",
        "success": true
    },
    "config_authority_certificate_ssl": {
        "scenario": "create a self signed ssl certificate and configure it, then enable site with ssl conf and check access/error logs for apache",
        "command_list": [
            "openssl req -new -x509 -sha256 -days 365 -nodes -out /etc/ssl/certs/apache-selfsigned.crt -keyout /etc/ssl/private/apache-selfsigned.key",
            "cat /etc/apache2/sites-available/default-ssl.conf",
            "a2ensite default-ssl.conf",
            "systemctl reload apache2",
            "tail -f /var/log/apache2/access.log /var/log/apache2/error.log"
        ],
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.37660345071088047,
        "force": 1.2800000000000002,
        "creation_date": "2025-04-06",
        "success": false
    },
    "apache2_conf": {
        "scenario": "change conf vars, test config, reload apache2, add it to init daemons",
        "command_list": [
            "sed -i 's/^Timeout .*/Timeout 40/' /etc/apache2/apache2.conf",
            "apache2ctl configtest",
            "sudo systemctl restart apache2",
            "sudo update-rc.d apache2 defaults"
        ],
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.7833774640608182,
        "force": 2.5600000000000005,
        "creation_date": "2025-04-06",
        "success": true
    },
    "search_ip_for_website": {
        "scenario": "try different formats of outputs for dig",
        "command_list": [
            "dig mx example +short",
            "dig mx example.com +short",
            "dig example.com +stats +trace"
        ],
        "last_revision_date": "2025-04-22",
        "retention_rate": 0.736993813311011,
        "force": 4.096000000000001,
        "creation_date": "2025-01-06",
        "success": true
    },
    "run docker env": {
        "scenario": "run docker env",
        "command_list": [
            "docker run -d -p 8080:80 docker/welcome-to-docker"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.7833774640608182,
        "force": 2.5600000000000005,
        "success": true
    },
    "docker_proj": {
        "scenario": "clone a docker proj and start using cli",
        "command_list": [
            "git clone https://github.com/docker/getting-started-todo-app",
            "cd getting-started-todo-app",
            "docker compose watch"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.4578333617716143,
        "force": 1.6,
        "success": false
    },
    "docker_build_n_push": {
        "scenario": "build and push a docker image",
        "command_list": [
            "git clone https://github.com/docker/getting-started-todo-app",
            "cd getting-started-todo-app",
            "docker build -t <DOCKER_USERNAME>/getting-started-todo-app .",
            "docker push <DOCKER_USERNAME>/getting-started-todo-app"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.7833774640608182,
        "force": 2.5600000000000005,
        "success": true
    },
    "stop_container": {
        "scenario": "run and stop a container",
        "command_list": [
            "docker run -d -p 8080:80 docker/welcome-to-docker",
            "docker ps -a",
            "docker stop <the-container-id>"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.7833774640608182,
        "force": 2.5600000000000005,
        "success": true
    },
    "create_run_push_to_docker": {
        "scenario": "create a docker image, container, list and push",
        "command_list": [
            "git clone https://github.com/dockersamples/helloworld-demo-node",
            "cd helloworld-demo-node",
            "docker build -t YOUR_DOCKER_USERNAME/docker-quickstart .",
            "docker images",
            "docker run -d -p 8080:8080 <YOUR_DOCKER_USERNAME>/docker-quickstart",
            "docker tag <YOUR_DOCKER_USERNAME>/docker-quickstart <YOUR_DOCKER_USERNAME>/docker-quickstart:1.0",
            "docker push <YOUR_DOCKER_USERNAME>/docker-quickstart:1.0"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.7833774640608182,
        "force": 2.5600000000000005,
        "success": true
    },
    "postfix_routine": {
        "scenario": "install and use postfix",
        "command_list": [
            "sudo apt update",
            "sudo apt install -y postfix mailutils",
            "sudo systemctl restart postfix",
            "echo \"Test Email\" | mail -s \"Test Subject\" root@etna.nx",
            "echo \"Installation et configuration de Postfix termin√©es.\""
        ],
        "creation_date": "2025-04-22",
        "last_revision_date": "2025-04-23",
        "retention_rate": 0.4578333617716143,
        "force": 1.6,
        "success": false
    },
    "create a directory and file in directory": {
        "scenario": "",
        "command_list": [
            "mkdir test",
            "touch test/test"
        ],
        "creation_date": "2025-04-22",
        "last_revision_date": "2025-04-24",
        "retention_rate": 1.0,
        "force": 3.2,
        "success": true
    }
}