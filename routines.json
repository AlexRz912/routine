{
    "usermanagement": {
        "scenario": "add a user, give him a new password",
        "command_list": [
            "useradd -s /bin/bash doublecoffee",
            "passwd doublecoffee"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 5.120000000000001,
        "creation_date": "2025-04-06",
        "success": true
    },
    "new_user_secure_password": {
        "scenario": "add a user, generate a password and and change default password for this user",
        "command_list": [
            "useradd -s /bin/bash revsh",
            "pwgen -s 16 1",
            "echo \"revsh:fqohdGcZpEY54djL\" | sudo chpasswd"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 5.120000000000001,
        "creation_date": "2025-04-06",
        "success": true
    },
    "add_user": {
        "scenario": "add a user, get a password, change his default shell",
        "command_list": [
            "useradd",
            "usermod",
            "quelquechose"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 3.2,
        "creation_date": "2025-04-06",
        "success": true
    },
    "dig": {
        "scenario": "try different outputs for dig",
        "command_list": [
            "dig example.com +short",
            "dig mx example.com +short",
            "dig example.com +stats +trace"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 4.096000000000001,
        "creation_date": "2025-04-06",
        "success": true
    },
    "change_user_directory_for_apache_configuration": {
        "scenario": "activate user directory from apache module, then change user directory for each user, don't forget to update a certain config file",
        "command_list": [
            "a2enmod userdir",
            "sed -i 's|public_html|www|g' /etc/apache2/mods-available/userdir.conf",
            "sed -i 's|public_html|www|g' /etc/apache2/mods-available/userdir.c"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 1.0240000000000002,
        "creation_date": "2025-04-06",
        "success": false
    },
    "create_dnszone": {
        "scenario": "zone dns creation with bind",
        "command_list": [
            "ZONE_NAME=\"mon-shell-est-beau.com\"",
            "ZONE_FILE=\"/etc/bind/db.mon-shell-est-beau.com\"",
            "NAMED_CONF=\"/etc/bind/named.conf.local\"",
            "rndc reload",
            "named-checkconf"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 1.2800000000000002,
        "creation_date": "2025-04-06",
        "success": false
    },
    "ip_print_octet": {
        "scenario": "print first octet of ip address",
        "command_list": [
            "IP=$(hostname -I | awk '{print $1}')",
            "IFS='.' read -r -a IP_ARRAY <<< \"$IP\"",
            "echo $IP_ARRAY[0]"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 2.5600000000000005,
        "creation_date": "2025-04-06",
        "success": false
    },
    "user_var": {
        "scenario": "3 ways to check who is the user connected",
        "command_list": [
            "echo $EUID",
            "id",
            "whoami"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 2.5600000000000005,
        "creation_date": "2025-04-06",
        "success": true
    },
    "apache_routine": {
        "scenario": "list modules, enable, disable modules, search for apache lib list, check if one module in particular is used",
        "command_list": [
            "apache2ctl -M",
            "a2dismod alias",
            "a2enmod headers",
            "a2enmod env",
            "a2enmod auth_basic",
            "a2enmod ssl",
            "a2dismod security2",
            "a2enmod rewrite",
            "a2enmod proxy",
            "a2enmod proxy_http",
            "systemctl restart apache2",
            "apt search apache2",
            "apt search libapache2-mod",
            "apache2ctl -M | grep ssl"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 1.6,
        "creation_date": "2025-04-06",
        "success": false
    },
    "config_authority_certificate_ssl": {
        "scenario": "create a self signed ssl certificate and configure it, then enable site with ssl conf and check access/error logs for apache",
        "command_list": [
            "openssl req -new -x509 -sha256 -days 365 -nodes -out /etc/ssl/certs/apache-selfsigned.crt -keyout /etc/ssl/private/apache-selfsigned.key",
            "cat /etc/apache2/sites-available/default-ssl.conf",
            "a2ensite default-ssl.conf",
            "systemctl reload apache2",
            "tail -f /var/log/apache2/access.log /var/log/apache2/error.log"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": null,
        "creation_date": "2025-04-06",
        "success": null
    },
    "apache2_conf": {
        "scenario": "change conf vars, test config, reload apache2, add it to init daemons",
        "command_list": [
            "sed -i 's/^Timeout .*/Timeout 40/' /etc/apache2/apache2.conf",
            "apache2ctl configtest",
            "sudo systemctl restart apache2",
            "sudo update-rc.d apache2 defaults"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": null,
        "creation_date": "2025-04-06",
        "success": null
    },
    "search_ip_for_website": {
        "scenario": "try different formats of outputs for dig",
        "command_list": [
            "dig mx example +short",
            "dig mx example.com +short",
            "dig example.com +stats +trace"
        ],
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": 1.6,
        "creation_date": "2025-01-06",
        "success": null
    },
    "test_999": {
        "scenario": "test",
        "command_list": [
            "ssh rodrig_a@172.16.227.122",
            "code ."
        ],
        "creation_date": "2025-04-08",
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 1.6,
        "success": false
    },
    "file_management": {
        "scenario": "create a folder, file in folder, and list it",
        "command_list": [
            "mkdir -p test/test",
            "touch test/test/test",
            "ls test/test"
        ],
        "creation_date": "2025-04-09",
        "last_revision_date": "2025-04-14",
        "retention_rate": 1.0,
        "force": 1.6,
        "success": false
    },
    "OSPF": {
        "scenario": "Cisco OSPF Implementation",
        "command_list": [
            "Stub areas—The definition of stub areas is supported",
            "Route redistribution—Routes learned via any IP routing protocol can be redistributed into any other IP routing protocol",
            "Virtual links—Virtual links are supported",
            "Not-so-stubby area (NSSA)—RFC 3101 which replaces and is backward compatible with RFC 1587",
            "OSPF over demand circuit—RFC 1793"
        ],
        "creation_date": "2025-04-09",
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "test": {
        "scenario": "test",
        "command_list": [
            "touch ospf.md",
            "vim ospf.md",
            "vim ./routines.json"
        ],
        "creation_date": "2025-04-09",
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "c3725_commands": {
        "scenario": "network commands for cisco router",
        "command_list": [
            "conf t",
            "interface",
            "ip add 10.0.0.1 255.255.255.0",
            "router ospf 1",
            "network",
            "sh ip int br",
            "sh ip route",
            "ip route",
            "sh ip protocols",
            "sh ip ospf neighbor",
            "end"
        ],
        "creation_date": "2025-04-09",
        "last_revision_date": "2025-04-14",
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "run docker env": {
        "scenario": "run docker env",
        "command_list": [
            "docker run -d -p 8080:80 docker/welcome-to-docker"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": null,
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "docker_proj": {
        "scenario": "clone a docker proj and start using cli",
        "command_list": [
            "git clone https://github.com/docker/getting-started-todo-app",
            "cd getting-started-todo-app",
            "docker compose watch"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": null,
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "docker_build_n_push": {
        "scenario": "build and push a docker image",
        "command_list": [
            "git clone https://github.com/docker/getting-started-todo-app",
            "cd getting-started-todo-app",
            "docker build -t <DOCKER_USERNAME>/getting-started-todo-app .",
            "docker push <DOCKER_USERNAME>/getting-started-todo-app"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": null,
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "stop_container": {
        "scenario": "run and stop a container",
        "command_list": [
            "docker run -d -p 8080:80 docker/welcome-to-docker",
            "docker ps -a",
            "docker stop <the-container-id>"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": null,
        "retention_rate": 0.5,
        "force": null,
        "success": null
    },
    "create_run_push_to_docker": {
        "scenario": "create a docker image, container, list and push",
        "command_list": [
            "git clone https://github.com/dockersamples/helloworld-demo-node",
            "cd helloworld-demo-node",
            "docker build -t YOUR_DOCKER_USERNAME/docker-quickstart .",
            "docker images",
            "docker run -d -p 8080:8080 <YOUR_DOCKER_USERNAME>/docker-quickstart",
            "docker tag <YOUR_DOCKER_USERNAME>/docker-quickstart <YOUR_DOCKER_USERNAME>/docker-quickstart:1.0",
            "docker push <YOUR_DOCKER_USERNAME>/docker-quickstart:1.0"
        ],
        "creation_date": "2025-04-14",
        "last_revision_date": null,
        "retention_rate": 0.5,
        "force": null,
        "success": null
    }
}